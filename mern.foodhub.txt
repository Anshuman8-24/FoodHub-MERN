/*
Project Structure:
- backend/
  - server.js
  - routes/
  - models/
  - controllers/
  - config/
- frontend/
  - src/
    - components/
    - pages/
    - App.js
    - index.js
*/

// Backend - server.js
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
require("dotenv").config();

const app = express();
app.use(express.json());
app.use(cors());

mongoose.connect(process.env.MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const restaurantRoutes = require("./routes/restaurantRoutes");
app.use("/api/restaurants", restaurantRoutes);

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));

// Backend - models/Restaurant.js
const mongoose = require("mongoose");
const RestaurantSchema = new mongoose.Schema({
  name: String,
  location: String,
  cuisine: String,
  imageUrl: String,
  contact: String,
  paymentOptions: [String],
});
module.exports = mongoose.model("Restaurant", RestaurantSchema);

// Backend - routes/restaurantRoutes.js
const express = require("express");
const router = express.Router();
const Restaurant = require("../models/Restaurant");

router.get("/", async (req, res) => {
  const restaurants = await Restaurant.find();
  res.json(restaurants);
});

module.exports = router;

// Frontend - src/App.js
import React, { useEffect, useState } from "react";
import axios from "axios";

function App() {
  const [restaurants, setRestaurants] = useState([]);

  useEffect(() => {
    axios.get("http://localhost:5000/api/restaurants").then((response) => {
      setRestaurants(response.data);
    });
  }, []);

  return (
    <div>
      <h1>FoodHub</h1>
      <div>
        {restaurants.map((restaurant) => (
          <div key={restaurant._id}>
            <h2>{restaurant.name}</h2>
            <p>{restaurant.cuisine} - {restaurant.location}</p>
            <p>Contact: {restaurant.contact}</p>
            <p>Payment Options: {restaurant.paymentOptions.join(", ")}</p>
            <img src={restaurant.imageUrl} alt={restaurant.name} width="200" />
          </div>
        ))}
      </div>
    </div>
  );
}

export default App;